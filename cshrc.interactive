# set the term if it hasn't already been set, or if it was set to dumb
if (! $?TERM) then
    set f_setterm
else if ($TERM == dumb) then
    set f_setterm
endif

if ($?f_setterm) then
    set noglob
        eval `tset -s - | sed -e '1d'`
    unset noglob
    unset f_setterm
endif

# in case term is changed, we should reset TERMTYPE.  this block should be
# identical to the one in cshrc
if ($?TERM) then
    if ($TERM == screen || $TERM == screen-w) then
        setenv TERMTYPE screen
    else if ($TERM == xterm-color) then
        setenv TERMTYPE xterm
    else
        setenv TERMTYPE $TERM
    endif
else
    setenv TERMTYPE dumb
endif

if ($?TERMCAP && $TERMTYPE != screen) then
    set noglob
        setenv TERMCAP "${TERMCAP}"'Co#8:pa#64:op=\E[37;40m:AF=\E[3%dm:AB=\E[4%dm:ut:'
        # for systems with terminfo, add 'colors#8, pairs#64, op=\E[37;40m, setaf=\E[3%p1%dm, setab=\E[4%p1%dm,' to the info file.  see terminfo(4), infocmp(1), and tic(1) for information on how this can be done.
    unset noglob
endif

stty erase '^?' kill '^U' intr '^C' stop '^O'

if ($?tcsh) then
    bindkey	"^[[1~"	beginning-of-line		# home
    bindkey	"\e[2~" overwrite-mode			# Ins
    bindkey	"\e[3~" delete-char			# Delete
    bindkey	"^[[4~"	end-of-line			# end
    bindkey	"^[[5~"	history-search-backward		# pageup
    bindkey	"^[[6~"	history-search-forward		# pagedown
    bindkey	"^B"	backward-word
    bindkey	"^F"	forward-word
    bindkey	-b M-b	backward-char
    bindkey	-b M-f	forward-char
    bindkey	-b C-s	i-search-fwd
    bindkey	-b C-r	i-search-back
endif

if (! $?F_NOMOTD && -r /etc/motd) then
    more /etc/motd
    setenv F_NOMOTD
endif

if ($?tcsh) then
    if (! $?F_NOQUOTACHECK && -X quota) then
        echo ""
        if ($OSTYPE == solaris) then
            quota
        else
            quota -q
        endif
    endif
endif

if ($?DISPLAY && ! $?V_SSH_DISPLAY) then
    setenv V_SSH_DISPLAY $DISPLAY
endif

# application setup
setenv ENSCRIPT -G
if (! $?EDITOR) then
    setenv EDITOR emacs
endif
setenv BLOCKSIZE K
setenv CVS_RSH ssh
setenv RSYNC_RSH ssh
setenv PAGER "less -m -e -i"

# shell stuff

# set the prompt
if (! $?prompt) then
    if ($?tcsh) then
        if ($?WINDOW) then
            setenv WINDOW_NUM "-$WINDOW"
            unsetenv WINDOW
        else
            setenv WINDOW_NUM
        endif

        if ($TERMTYPE == xterm || $TERMTYPE == screen) then
            set prompt='%{\e]0\;[%m'${WINDOW_NUM:q}']:%/>^g%}[%m'${WINDOW_NUM:q}']:%B%~%b%# '
        else
            set prompt='[%m'${WINDOW_NUM:q}']:%B%~%b%# '
        endif
    else
        set prompt=${HOST}':\!> '
    endif
endif
unset promptchars

if (! $?watch) then
    set watch=(1 $user any)
endif

unset autologout
set pushdtohome dextract dunique notify noclobber listjobs
set autolist=ambiguous
set cdpath=${HOME}
set history=500
set histdup=erase
set savehist=(500 merge)
if ($?tcsh) then
    set v_tcshver = `echo $version | cut -d' ' -f 2`
    if ($v_tcshver == "6.13.00") then
        set ignoreeof=3
    else
        set ignoreeof=2
    endif
endif
set symlinks=ignore
set time=(10 "%Us usr, %Ss kern, %Es real, %Xk shrd, %Dk usr")

if (`alias periodic` != "") then
    set tperiod=1
endif
