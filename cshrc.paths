if ($?f_gatherpaths) then
    set C_PATH
    set C_MANPATH
    set C_INFOPATH
    set C_LD_LIBRARY_PATH
    set C_INCLUDE
    set C_LIB
    set C_CLASSPATH
    set C_PYTHONPATH

    if ($?HOME) then
        set COMPAT_MACHTYPE = ${MACHTYPE}
        set COMPAT_OSTYPE   = ${OSTYPE}

        # x86-64 can run i386 binaries.
        if (${MACHTYPE} == "x86_64") then
            set COMPAT_MACHTYPE = (${COMPAT_MACHTYPE} i386)
        endif

        # freebsd has the linux compatibility layer.
        if (${OSTYPE} == "FreeBSD") then
            set COMPAT_OSTYPE = (${COMPAT_OSTYPE} Linux)
        endif

        # macosx has rosetta, allowing it to run ppc binaries.
        if (${OSTYPE} == "Darwin" && ${MACHTYPE} == "i386") then
            set COMPAT_MACHTYPE = (${COMPAT_MACHTYPE} powerpc)
        endif

        # generate a list of all home-based systems to check.
        set CHECK = (${HOME}/software)

        foreach machtype ($COMPAT_MACHTYPE)
            foreach ostype ($COMPAT_OSTYPE)
                set CHECK = (${CHECK} ${HOME}/software/${machtype}-${ostype})
            end
        end

        foreach check (${CHECK})
            set C_PATH			= (${C_PATH} ${check}/bin)

            set C_LD_LIBRARY_PATH	= (${check}/lib ${C_LD_LIBRARY_PATH})
            if (${MACHTYPE} == "x86_64") then
                set C_LD_LIBRARY_PATH	= (${check}/lib64 ${C_LD_LIBRARY_PATH})
            endif

            set C_MANPATH		= (${check}/man ${check}/share/man ${C_MANPATH})

            set C_INFOPATH		= (${check}/info ${C_INFOPATH})

            set C_INCLUDE		= (${check}/include ${C_INCLUDE})
            set C_LIB                   = (${check}/lib ${C_LIB})

            set C_CLASSPATH		= (${check}/classes ${C_CLASSPATH})

            set C_PYTHONPATH        	= (${check}/python ${C_PYTHONPATH})
        end

        unset COMPAT_MACHTYPE COMPAT_OSTYPE CHECK
    endif
    cstat "."

    # initialize path variables for all trusted prefixed subsystems
    foreach prefix (/usr/local /opt/local /usr/openwin /usr/dt /usr/ccs /usr/X11 /usr/X11R6 /usr/contrib)
        set C_PATH		= (${C_PATH} ${prefix}/bin ${prefix}/sbin)

        set C_MANPATH		= (${C_MANPATH} ${prefix}/man ${prefix}/share/man)
        set C_INFOPATH		= (${C_INFOPATH} ${prefix}/info ${prefix}/share/info)

        set C_LD_LIBRARY_PATH	= (${C_LD_LIBRARY_PATH} ${prefix}/lib)
    end
    cstat "."

    # miscellaneous paths
    set C_PATH			= (${C_PATH} /usr/bin /bin /usr/sbin /sbin /etc \
                                    /usr/ucb /usr/etc /usr/bin/X11)
    set C_MANPATH		= (${C_MANPATH} /usr/man /usr/share/man)
    set C_INFOPATH		= (${C_INFOPATH} /usr/share/info)
    set C_LD_LIBRARY_PATH	= (${C_LD_LIBRARY_PATH} /lib /usr/lib /usr/lib/X11)
    cstat "."

    if ($OSTYPE == solaris) then
        set C_PATH		= (${C_PATH} /lang/SUNWspro/bin /opt/SUNWspro/bin /opt/SUNWdtpcv/bin)

        set C_MANPATH		= (${C_MANPATH} /lang/SUNWspro/man /opt/SUNWspro/man)

        set C_LD_LIBRARY_PATH	= (${C_LD_LIBRARY_PATH} /lang/SUNWspro/lib /opt/SUNWspro/lib /opt/SUNWdtpcv/lib)
    endif

    # initialize path variables for all untrusted prefixed subsystems
    foreach prefix (/usr/contrib)
        set C_PATH		= (${C_PATH} ${prefix}/bin ${prefix}/sbin)

        set C_MANPATH		= (${C_MANPATH} ${prefix}/man ${prefix}/share/man)
        set C_INFOPATH		= (${C_INFOPATH} ${prefix}/share/info)

        set C_LD_LIBRARY_PATH	= (${C_LD_LIBRARY_PATH} ${prefix}/lib)
    end
    cstat "."
endif

# even if we are just gathering, we should probably set the paths, in case
# later init files require things that are in the path.  we just have to set it 
# twice.
if ($?f_setpaths) then
    setenv PATH			""
    setenv MANPATH		""
    setenv INFOPATH		""
    setenv LD_LIBRARY_PATH	""
    setenv INCLUDE		""
    setenv LIB			""
    setenv CLASSPATH		""
    setenv PYTHONPATH		""

    setenv GCC_DFLAG		""
    setenv GCC_IFLAG		""
    setenv GCC_LFLAG		""

    set bin_separator man_separator info_separator ld_separator include_separator lib_separator pythonpath_separator

    foreach bin (${C_PATH})
        if (-d ${bin}) then
            setenv PATH			"${PATH}${bin_separator}${bin}"
            set bin_separator =		:
        endif
    end

    cstat "."
    foreach man (${C_MANPATH})
        if (-d ${man}) then
            setenv MANPATH		"${MANPATH}${man_separator}${man}"
            set man_separator =		:
        endif
    end
    cstat "."
    foreach info (${C_INFOPATH})
        if (-d ${info}) then
            setenv INFOPATH		"${INFOPATH}${info_separator}${info}"
            set info_separator =	:
        endif
    end
    cstat "."
    foreach lib (${C_LD_LIBRARY_PATH})
        if (-d ${lib}) then
            setenv LD_LIBRARY_PATH	"${LD_LIBRARY_PATH}${ld_separator}${lib}"
            set ld_separator =		:
        endif
    end
    cstat "."
    foreach include (${C_INCLUDE})
        if (-d ${include}) then
            setenv INCLUDE		"${INCLUDE}${include_separator}${include}"
            setenv GCC_IFLAG		"${GCC_IFLAG} -I${include}"
            set include_separator =	:
        endif
    end
    cstat "."
    foreach lib (${C_LIB})
        if (-d ${lib}) then
            setenv LIB			"${LIB}${lib_separator}${lib}"
            setenv GCC_LFLAG		"${GCC_LFLAG} -I${lib}"
            set lib_separator =	:
        endif
    end
    cstat "."
    foreach pythonpath (${C_PYTHONPATH})
        if (-d ${pythonpath}) then
            setenv PYTHONPATH		"${PYTHONPATH}${pythonpath_separator}${pythonpath}"
            set pythonpath_separator =	:
        endif
    end
    cstat "."

    if (! $?f_gatherpaths) then
        unset C_PATH C_MANPATH C_INFOPATH C_LD_LIBRARY_PATH C_INCLUDE C_LIB C_CLASSPATH C_PYTHONPATH
    endif
    unset bin_separator man_separator info_separator ld_separator include_separator lib_separator pythonpath_separator

    cstat "done\n"
endif
